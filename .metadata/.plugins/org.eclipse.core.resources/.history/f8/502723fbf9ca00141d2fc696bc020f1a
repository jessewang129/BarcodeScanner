package com.example.nwhack;

import org.json.*;
import javax.json.*;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.*;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.os.AsyncTask;
import android.os.AsyncTask.Status;
import android.view.Menu;
import android.view.MenuItem;

import com.example.nwhack.MainActivity.networkGo;
import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity implements OnClickListener {
	private Button scanBtn;
	private TextView formatTxt, contentTxt;
	private static String upc = "http://api.upcdatabase.org/json/6eed8e46a8adbf7b2286b514fc08e1ac/";
	//URL to get JSON Array
	private static String url;
	//JSON Node Names
	
	private static final String TAG_NAME = "itemname";
	JSONArray user = null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        scanBtn = (Button)findViewById(R.id.scan_button);
        formatTxt = (TextView)findViewById(R.id.scan_format);
        contentTxt = (TextView)findViewById(R.id.scan_content);
        scanBtn.setOnClickListener(this);
        networkGo A = new networkGo();
        try{
        String result = A.execute().get();
        System.out.println(result);
        }catch (Exception e){
       	 System.out.println(e.getMessage());
        }
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }


	@Override
	public void onClick(View v) {
		
		if(v.getId()==R.id.scan_button){
			//scan
			IntentIntegrator scanIntegrator = new IntentIntegrator(this);
			scanIntegrator.initiateScan();
		}		
		
	}
	
	public void onActivityResult(int requestCode, int resultCode, Intent intent) {
		//retrieve scan result
		IntentResult scanningResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, intent);
		if (scanningResult != null) {
			//we have a result
			String scanContent = scanningResult.getContents();
			String scanFormat = scanningResult.getFormatName();
			formatTxt.setText("FORMAT: " + scanFormat);
			contentTxt.setText("CONTENT: " + scanContent);
			url = upc + scanContent;
			
			
		}
	}
	public class networkGo extends AsyncTask<Void, Void, String> {
		
		private String resultValue;

        protected String doInBackground(Void ... params) {
            resultValue = null;
                    
            HttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost("http://sodiumcut.com:7080/nwhacks/public/index.php/api");
            HttpResponse response = null;
            
            List < NameValuePair > nameValuePairs = new ArrayList < NameValuePair > (5);
            nameValuePairs.add(new BasicNameValuePair("login", "true"));
            nameValuePairs.add(new BasicNameValuePair("name", "testUser2"));
            nameValuePairs.add(new BasicNameValuePair("email", "nays85@gmail.com"));
            nameValuePairs.add(new BasicNameValuePair("password", "aa12345"));
            
            try{
            httpPost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
            } catch (Exception e){
            	e.printStackTrace();
            }            
            
            try{
            response = httpClient.execute(httpPost);
            }catch(Exception e){
            	e.printStackTrace();
            }
            
            try{
            	resultValue =  EntityUtils.toString(response.getEntity());
            }catch(Exception e){
            	e.printStackTrace();
            }
           return resultValue;
        }

        protected void onProgressUpdate(Void ... progress) {
            
        }

        protected void onPostExecute(String result) {
        	resultValue = result;
        }
        
        
      }
	
}
